{"version":3,"file":"static/js/387.28c53e25.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/MoviesServices.js"],"sourcesContent":["const { default: styled } = require('@emotion/styled');\n\nexport const ListActors = styled.ul`\n  list-style-type: none;\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 30px;\n  row-gap: 10px;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ItemActor = styled.li`\n  width: 185px;\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as MoviseService from 'services/MoviesServices';\nimport { ItemActor, ListActors } from './Cast.styled';\n\nconst Cast = () => {\n  const [actorsInfo, setActorsInfo] = useState(null);\n  const isFirstRender = useRef(true);\n  const { movieId } = useParams();\n  const defaultImg =\n    'https://via.placeholder.com/185x278.png?text=Image+Not+Found';\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    if (!movieId) return;\n    const getMovieDetails = async () => {\n      try {\n        const dataActorsInfo = await MoviseService.getMovieCastInfo(movieId);\n        if (dataActorsInfo.cast.lenght === 0) {\n          toast.error(\"We don't have any cast for this movie\");\n          return;\n        }\n        setActorsInfo(dataActorsInfo.cast);\n      } catch (error) {\n        toast.error('Oops! Something went wrong!');\n      }\n    };\n\n    getMovieDetails();\n  }, [movieId]);\n  return (\n    <ListActors>\n      {actorsInfo &&\n        actorsInfo.map(({ original_name, character, profile_path, id }) => (\n          <ItemActor key={id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w185${profile_path}`\n                  : defaultImg\n              }\n              alt={original_name}\n            />\n            <p>{original_name}</p>\n            <p>Character: {character}</p>\n          </ItemActor>\n        ))}\n    </ListActors>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwYTA4MTBhZjNjNzU2YWE5ODg3Zjc1MDE5Yjg1YzljZCIsInN1YiI6IjY1MTlkOWVhOTNiZDY5MDExYjhlNWEyZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fo-xtr4t_cfrI5X5-r4VCMGs2uXZITiS9EqRwp_MRgI';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] = `Bearer  ${API_KEY}`;\n\nexport const getPopularMovies = async () => {\n  const fetchMovies = await axios.get('/trending/movie/day');\n  return fetchMovies.data;\n};\n\nexport const getMovieById = async id => {\n  const fetchMovie = await axios.get(`/movie/${id}`);\n  return fetchMovie.data;\n};\n\nexport const getMovieCastInfo = async id => {\n  const fetchInfo = await axios.get(`/movie/${id}/credits`);\n  return fetchInfo.data;\n};\n\nexport const getMoviesListByQuery = async query => {\n  const fetchMoviesList = await axios.get(`/search/movie?query=${query}`);\n  return fetchMoviesList.data;\n};\n\nexport const getMovieReviews = async id => {\n  const fetchReviews = await axios.get(`/movie/${id}/reviews`);\n  return fetchReviews.data;\n};\n"],"names":["styled","require","default","ListActors","ul","_templateObject","_taggedTemplateLiteral","ItemActor","li","_templateObject2","_useState","useState","_useState2","_slicedToArray","actorsInfo","setActorsInfo","isFirstRender","useRef","movieId","useParams","useEffect","current","getMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","dataActorsInfo","_context","prev","next","MoviseService","sent","cast","lenght","toast","abrupt","t0","stop","apply","arguments","_jsx","children","map","_ref2","original_name","character","profile_path","id","_jsxs","src","concat","alt","axios","getPopularMovies","fetchMovies","data","getMovieById","_callee2","fetchMovie","_context2","_x","getMovieCastInfo","_ref3","_callee3","fetchInfo","_context3","_x2","getMoviesListByQuery","_ref4","_callee4","query","fetchMoviesList","_context4","_x3","getMovieReviews","_ref5","_callee5","fetchReviews","_context5","_x4"],"sourceRoot":""}