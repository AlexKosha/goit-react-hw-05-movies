{"version":3,"file":"static/js/387.a519a12d.chunk.js","mappings":"mRAAiBA,EAAWC,EAAQ,MAA5BC,QAEKC,EAAaH,EAAOI,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qKAUtBC,EAAYP,EAAOQ,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2B,SCuClC,EA7Ca,WACX,IAAAI,GAAoCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAC1BI,GAAgBC,EAAAA,EAAAA,SAAO,GACrBC,GAAYC,EAAAA,EAAAA,MAAZD,QAqBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,GAAIJ,EAAcK,QAChBL,EAAcK,SAAU,OAG1B,GAAKH,EAAL,CACA,IAAMI,EAAe,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAESC,EAAAA,GAA+Bb,GAAS,KAAD,EAA9DS,EAAcC,EAAAI,KACpBjB,EAAcY,EAAeM,MAAML,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEnCO,EAAAA,GAAAA,MAAY,+BAA+B,yBAAAP,EAAAQ,OAAA,GAAAV,EAAA,kBAE9C,kBAPoB,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KASrBhB,GAVoB,CAWtB,GAAG,CAACJ,KAEFqB,EAAAA,EAAAA,KAACpC,EAAU,CAAAqC,SACR1B,GACCA,EAAW2B,KAAI,SAAAC,GAAA,IAAGC,EAAaD,EAAbC,cAAeC,EAASF,EAATE,UAAWC,EAAYH,EAAZG,aAAcC,EAAEJ,EAAFI,GAAE,OAC1DC,EAAAA,EAAAA,MAACxC,EAAS,CAAAiC,SAAA,EACRD,EAAAA,EAAAA,KAAA,OACES,IACEH,EAAY,kCAAAI,OAC0BJ,GA3BlD,+DA8BUK,IAAKP,KAEPJ,EAAAA,EAAAA,KAAA,KAAAC,SAAIG,KACJI,EAAAA,EAAAA,MAAA,KAAAP,SAAA,CAAG,cAAYI,OAVDE,EAWJ,KAItB,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["const { default: styled } = require('@emotion/styled');\n\nexport const ListActors = styled.ul`\n  list-style-type: none;\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 30px;\n  row-gap: 10px;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ItemActor = styled.li`\n  width: 185px;\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as MoviseService from 'services/MoviesServices';\nimport { ItemActor, ListActors } from './Cast.styled';\n\nconst Cast = () => {\n  const [actorsInfo, setActorsInfo] = useState(null);\n  const isFirstRender = useRef(true);\n  const { movieId } = useParams();\n  const defaultImg =\n    'https://via.placeholder.com/185x278.png?text=Image+Not+Found';\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    if (!movieId) return;\n    const getMovieDetails = async () => {\n      try {\n        const dataActorsInfo = await MoviseService.getMovieCastInfo(movieId);\n        setActorsInfo(dataActorsInfo.cast);\n      } catch (error) {\n        toast.error('Oops! Something went wrong!');\n      }\n    };\n\n    getMovieDetails();\n  }, [movieId]);\n  return (\n    <ListActors>\n      {actorsInfo &&\n        actorsInfo.map(({ original_name, character, profile_path, id }) => (\n          <ItemActor key={id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w185${profile_path}`\n                  : defaultImg\n              }\n              alt={original_name}\n            />\n            <p>{original_name}</p>\n            <p>Character: {character}</p>\n          </ItemActor>\n        ))}\n    </ListActors>\n  );\n};\n\nexport default Cast;\n"],"names":["styled","require","default","ListActors","ul","_templateObject","_taggedTemplateLiteral","ItemActor","li","_templateObject2","_useState","useState","_useState2","_slicedToArray","actorsInfo","setActorsInfo","isFirstRender","useRef","movieId","useParams","useEffect","current","getMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","dataActorsInfo","_context","prev","next","MoviseService","sent","cast","t0","toast","stop","apply","arguments","_jsx","children","map","_ref2","original_name","character","profile_path","id","_jsxs","src","concat","alt"],"sourceRoot":""}